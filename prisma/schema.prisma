generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = "mysql://gibson:0723810706@awesome@104.214.216.154:3306/essaydons"
}

model accounts {
  id         Int        @id @default(autoincrement())
  name       String?
  created_at DateTime?  @default(now())
  updated_at DateTime?  @default(now())
  deleted_at DateTime?
  orders     orders[]
  posts      posts[]
  products   products[]
  users      users[]
}

model categories {
  id             Int        @id @default(autoincrement())
  name           String?
  slug           String?
  description    String?
  specifications String?
  created_at     DateTime?  @default(now())
  updated_at     DateTime?  @default(now())
  deleted_at     DateTime?
  posts          posts[]
  products       products[]
}

model orders {
  id            Int       @id @default(autoincrement())
  user_id       Int
  account_id    Int
  order_details String
  status        String
  created_at    DateTime? @default(now())
  updated_at    DateTime? @default(now())
  deleted_at    DateTime?
  accounts      accounts  @relation(fields: [account_id], references: [id])
  users         users     @relation(fields: [user_id], references: [id])

  @@index([account_id], name: "orders_account_index")
  @@index([user_id], name: "orders_user_index")
}

model posts {
  id          Int        @id @default(autoincrement())
  account_id  Int
  user_id     Int
  category_id Int
  title       String
  slug        String
  excerpt     String
  description String?
  tags        String?
  metadata    String?
  created_at  DateTime?  @default(now())
  updated_at  DateTime?  @default(now())
  deleted_at  DateTime?
  accounts    accounts   @relation(fields: [account_id], references: [id])
  categories  categories @relation(fields: [category_id], references: [id])
  users       users      @relation(fields: [user_id], references: [id])

  @@index([account_id], name: "posts_account_index")
  @@index([category_id], name: "posts_category_index")
  @@index([user_id], name: "posts_user_index")
}

model products {
  id          Int        @id @default(autoincrement())
  account_id  Int
  user_id     Int
  category_id Int
  product     String
  created_at  DateTime?  @default(now())
  updated_at  DateTime?  @default(now())
  deleted_at  DateTime?
  accounts    accounts   @relation(fields: [account_id], references: [id])
  categories  categories @relation(fields: [category_id], references: [id])
  users       users      @relation(fields: [user_id], references: [id])

  @@index([account_id], name: "products_account_index")
  @@index([category_id], name: "products_category_index")
  @@index([user_id], name: "products_user_index")
}

model users {
  id                Int        @id @default(autoincrement())
  account_id        Int
  email             String     @unique
  phone             String?    @unique
  name              String
  email_verified_at DateTime?
  password          String?
  provider          String?
  provider_id       String?
  owner             Boolean    @default(false)
  metadata          String?
  created_at        DateTime?  @default(now())
  updated_at        DateTime?  @default(now())
  deleted_at        DateTime?
  accounts          accounts   @relation(fields: [account_id], references: [id])
  orders            orders[]
  posts             posts[]
  products          products[]

  @@index([account_id], name: "users_account_fk")
}
