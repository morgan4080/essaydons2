generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./vercelfun.sqlite"
}

model accounts {
  id         Int         @id @default(autoincrement())
  name       String?
  created_at DateTime    @default(now())
  updated_at DateTime    @default(now())
  deleted_at DateTime?
  posts      posts[]
  storedata  storedata[]
  users      users[]
}

model categories {
  id             Int         @id @default(autoincrement())
  name           String?
  slug           String?
  description    String?
  specifications String?
  created_at     DateTime?
  updated_at     DateTime?
  deleted_at     DateTime?
  storedata      storedata[]
}

model orders {
  id            Int       @id @default(autoincrement())
  user_id       Int
  order_details String
  created_at    DateTime?
  updated_at    DateTime?
  deleted_at    DateTime?
  users         users     @relation(fields: [user_id], references: [id])

  @@index([user_id], name: "orders_user_id_index")
}

model posts {
  id          Int       @id @default(autoincrement())
  account_id  Int?
  user_id     Int?
  title       String?
  slug        String?
  excerpt     String?
  description String?
  metadata    String?
  tags        String?
  created_at  DateTime?
  updated_at  DateTime?
  deleted_at  DateTime?
  accounts    accounts? @relation(fields: [account_id], references: [id])
  users       users?    @relation(fields: [user_id], references: [id])
}

model storedata {
  id          Int         @id @default(autoincrement())
  user_id     Int?
  category_id Int?
  product     String?
  created_at  DateTime?
  updated_at  DateTime?
  deleted_at  DateTime?
  account_id  Int?
  accounts    accounts?   @relation(fields: [account_id], references: [id])
  categories  categories? @relation(fields: [category_id], references: [id])
  users       users?      @relation(fields: [user_id], references: [id])
}

model users {
  id                Int         @id @default(autoincrement())
  account_id        Int?
  name              String
  email             String      @unique
  email_verified_at DateTime?
  password          String
  phone             String?
  provider          String?
  provider_id       String?
  owner             Boolean?    @default(false)
  metadata          String?
  created_at        DateTime?
  updated_at        DateTime?
  deleted_at        DateTime?
  accounts          accounts?   @relation(fields: [account_id], references: [id])
  orders            orders[]
  posts             posts[]
  storedata         storedata[]
}
