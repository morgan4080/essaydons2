generator client {
  provider      = "prisma-client-js"
  output        = "../lib/generated-prisma-client"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = "mysql://gibson:0723810706@awesome@104.214.216.154:3306/essaydons"
}

model accounts {
  id         Int        @id @default(autoincrement())
  name       String?    @db.Text
  created_at DateTime?  @default(now()) @db.Timestamp(0)
  updated_at DateTime?  @default(now()) @db.Timestamp(0)
  deleted_at DateTime?  @db.Timestamp(0)
  orders     orders[]
  posts      posts[]
  products   products[]
  users      users[]
}

model categories {
  id             Int        @id @default(autoincrement())
  name           String?    @db.Text
  slug           String?    @db.Text
  description    String?    @db.LongText
  specifications String?    @db.LongText
  created_at     DateTime?  @default(now()) @db.Timestamp(0)
  updated_at     DateTime?  @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?  @db.Timestamp(0)
  posts          posts[]
  products       products[]
}

model orders {
  id            Int       @id @default(autoincrement())
  user_id       Int
  account_id    Int
  order_details String    @db.LongText
  status        String    @db.LongText
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  updated_at    DateTime? @default(now()) @db.Timestamp(0)
  deleted_at    DateTime? @db.Timestamp(0)
  accounts      accounts  @relation(fields: [account_id], references: [id])
  users         users     @relation(fields: [user_id], references: [id])

  @@index([account_id], name: "orders_account_index")
  @@index([user_id], name: "orders_user_index")
}

model posts {
  id          Int        @id @default(autoincrement())
  account_id  Int
  user_id     Int
  category_id Int
  title       String     @db.Text
  slug        String     @db.Text
  excerpt     String     @db.Text
  description String?    @db.LongText
  tags        String?    @db.LongText
  metadata    String?    @db.LongText
  created_at  DateTime?  @default(now()) @db.Timestamp(0)
  updated_at  DateTime?  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime?  @db.Timestamp(0)
  accounts    accounts   @relation(fields: [account_id], references: [id])
  categories  categories @relation(fields: [category_id], references: [id])
  users       users      @relation(fields: [user_id], references: [id])

  @@index([account_id], name: "posts_account_index")
  @@index([category_id], name: "posts_category_index")
  @@index([user_id], name: "posts_user_index")
}

model products {
  id          Int        @id @default(autoincrement())
  account_id  Int
  user_id     Int
  category_id Int
  product     String     @db.LongText
  created_at  DateTime?  @default(now()) @db.Timestamp(0)
  updated_at  DateTime?  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime?  @db.Timestamp(0)
  accounts    accounts   @relation(fields: [account_id], references: [id])
  categories  categories @relation(fields: [category_id], references: [id])
  users       users      @relation(fields: [user_id], references: [id])

  @@index([account_id], name: "products_account_index")
  @@index([category_id], name: "products_category_index")
  @@index([user_id], name: "products_user_index")
}

model users {
  id                Int        @id @default(autoincrement())
  account_id        Int
  email             String     @unique @db.VarChar(50)
  phone             String?    @unique @db.VarChar(50)
  name              String     @db.TinyText
  email_verified_at DateTime?  @db.Timestamp(0)
  password          String?    @db.Text
  provider          String?    @db.Text
  provider_id       String?    @db.Text
  owner             Boolean    @default(false)
  metadata          String?    @db.LongText
  created_at        DateTime?  @default(now()) @db.Timestamp(0)
  updated_at        DateTime?  @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?  @db.Timestamp(0)
  accounts          accounts   @relation(fields: [account_id], references: [id])
  orders            orders[]
  posts             posts[]
  products          products[]

  @@index([account_id], name: "users_account_fk")
}
